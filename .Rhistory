a <- available.packages()
head(rownames(a), 3)
head(rownames(a), 30)
install.packages("slidify")
install.packages("ggplot2")
library("ggplot2")
search()
install.packages("devtools")
library("devtools")
find_rtools()
find_rtools()
find_rtools()
library("devtools")
find_rtools()
install("kernsmooth")
library("devtools")
install("KernSmooth")
library("KernSmooth")
git pwd
getwd
getwd()
getwd()
myfunc -> function(){
x => rnorm(10)
mean(x)
}
myfunc -> function(){
x => rnorm(10);
mean(x);
}myfunc -> function(){
x -> rnorm(10);
mean(x);
}myfunc -> function(){
x <- rnorm(10);
mean(x);
}myfunc -> function(){
x <- rnorm(10);
mean(x);
}c <-
c <-
3
print(c)
c < 5:8
print(c)
c <- 5:8
print(c)
attributes()
attributes(c)
length(c)
class(c)
dimensions(c)
vector()
length()
x <- c(0.5, 0.6)
print(x)
x <- vector(true, 3)
x <- c(true, 3)
x <- c(TRUE, 3)
print(x)
x <- c("integer", length=10)
print(x)
attributes(x)
x <- list("x", TRUE, 2)
PRINT(X)
print(x)
x <- matrix(1:6)
print(x)
x <- data.frame(a="1",b="2")
x
dput(x)
str()dput
str(dput)
x <- list(a=1:4, b=0.6)
x
x[1]
x[2]
$a
x$a
x$b
x <- matrix(1:6 , 2, 3)
x
x <- c(1,2,3,NA, NA, 6)
x
c <- is.na(x)
c
x[FALSE]
x[c]
x[!c]
x <- 4L
class(x)
x <- list(2,"a","b", TRUE)
X[[2]]
x[[2]]
getwd()
x <- read.csv("hw1_data")
x <- read.csv("hw1_data.csv")
length(x)
colnames(x)
x <- read.csv("hw1_data.csv", nrows = 2)
x
x <- read.csv("hw1_data.csv")
nrows(x)
attributes(x)
x$row.length
x$row
length(x)
numrows(x)
nrows(x)
rows(x)
x <- read.csv("hw1_data.csv", nrows = 2, skip=151)
x
x[[1,47]]
x[1,47]
x[47]
x[[1]]
x <- read.csv("hw1_data.csv")
x[1,47]
x[47]
x$ozone
x$Ozone
x$Ozone[47]
c <- complete.cases(x$ozone)
c <- complete.cases(x$Ozone)
c
length(!c)
z <- x$Ozone[is.na(x)]
z
z <- is.na(x$Ozone)
z
length(z == FALSE)
length(z)
length(z != FALSE)
length(s[is.na(x$Ozone]))
length(s[is.na(x$Ozone)])
length(x[is.na(x$Ozone)])
length(is.na(x$Ozone))
length(is.na(x$Ozone) != FALSE)
complete.cases(x$Ozone)
g[complete.cases(x$Ozone) == TRUE]
g <- complete.cases(x$Ozone) == TRUE
g
g <- c(complete.cases(x$Ozone))
g
x$Ozone[x$Ozone != NA]
length(x$Ozone)
x <- read.csv("hw1_data.csv")
length(is.na(x$Ozone) == FALSE)
is.na(x$Ozone)
length(is.na(x$Ozone) == "FALSE")
length(is.na(x$Ozone) > FALSE)
length(!is.na(x$Ozone))
x$Ozone[!is.na(x$Ozone)]
length(x$Ozone)
x$Ozone
length(x$Ozone[!is.na(x$Ozone)])
length(x$Ozone[is.na(x$Ozone)])
length(x$Ozone[!is.na(x$Ozone)])
mean(x$Ozone[!is.na(x$Ozone)])
x
x[Ozone > 31]
x[$Ozone > 31]
x[x$Ozone > 31]
subset(x, x$Ozone > 31)
subset(x, x$Ozone > 31 & x$Temp > 90)
sub <-subset(x, x$Ozone > 31 & x$Temp > 90)
sub
mean(sub$Solar.R)
sub <-subset(x, x$Month = 6)
sub <-subset(x, x$Month == 6)
sub
mean(sub$Temp)
sub <-subset(x, x$Month == 5)
max(x$Ozone)
sub <-subset(x, x$Month == 5 & x$Ozone != NA )
sub
sub <-subset(x, x$Month == 5)
sub
max(sub$Ozone)
max(sub$Ozone, na.rm = TRUE)
install.package("swirl")
install.packages("swirl")
y <- 10
f <- function(x){}
f <- function(x){  }
install.packages("swirl")
library(swirl)
swirl()
Sys.Date()
mean(c(2,4,5))
submit()
boring_function('My first function!')
boring_function
submit()
my_mean(c(4,5,10))
submit()
remainder(5)
remainder(11,5)
remainder(divisor = 11, num = 5)
remainder(4, div = 2)
args(remainder)
submit()
submit()
evaluate(c(1.4, 3.6, 7.9, 8.8))
evaluate(stddev, c(1.4, 3.6, 7.9, 8.8))
evaluate(sd, c(1.4, 3.6, 7.9, 8.8))
evaluate(function(x){x+1}, 6)
evaluate(function(x){ x[1] }, c(8,4,0))
evaluate(function(x){ x[length(x)] }, c(8,4,0))
?paste
paste("Programming", "is", "fun!")
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
submit()
telegram("Hello", "Ankit")
submit()
mad_libs("Gurgaon", "Lovely", "City")
submit()
'I' %p% 'love' %p% 'R!'
d1 <- Sys.Date()
class(d1)
unclass(d1)
d1
d2 <- as.Date("1969-01-01")
unclass(d2)
t1 <- Sys.time()
t1
class(t1)
unclass(t1)
t2 <- as.POSIX1t(Sys.time())
t2 <- as.POSIXIt(Sys.time())
t2 <- as.POSIXIlt(Sys.time())
t2 <- as.POSIXlt(Sys.time())
class(t2)
t2
unclass(t2)
str(unclass(t2))
t2$min
weekdays(t2)
weekdays(d1)
months(t1)
quarters(t2)
t3 <- strptime("October 17, 1986 08:24")
t3 <- strptime("October 17, 1986 08:24", MM DD,YYYY HH:MM)
t3 <- strptime("October 17, 1986 08:24", MM DD YYYY HH:MM)
t3 <- strptime("October 17, 1986 08:24", M DD YYYY HH:MM)
t3 <- strptime("October 17, 1986 08:24", %B %d,%Y %R)
t3 <- strptime("October 17, 1986 08:24", %B %d%Y %R)
t3 <- strptime("October 17, 1986 08:24", "%B%d%Y%R")
t3 <- strptime("October 17, 1986 08:24", "%B%d,%Y%R")
t3 <- strptime("October 17, 1986 08:24", "%B %d,%Y %R")
t3 <- strptime("October 17, 1986 08:24", "%B %d,%Y %H:%M")
t3 <- strptime("October 17, 1986 08:24", "%B %D,%Y %H:%M")
t3 <- strptime("October 17, 1986 08:24", "%B %D %Y %H:%M")
t3 <- strptime("October 17, 1986 08:24", "%B %e,%Y %H:%M")
t3 <- strptime("October 17, 1986 08:24", "%B %d, %Y %H:%M")
t3 <- "October 17, 1986 08:24"
strptime(t3, "%B %d, %Y %H:%M")
t4 <- strptime(t3, "%B %d, %Y %H:%M")
t4
class(t4)
Sys.time() > t1
Sys.time() - t1
difftime(Sys.time(), t1, units = 'days')
q()
